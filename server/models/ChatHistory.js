const mongoose = require("mongoose");

const chatHistorySchema = new mongoose.Schema({
  // This is the link to the user. A user can have many of these.
  user: {
    type: mongoose.Schema.Types.ObjectId,
    ref: "User",
    required: true,
  },
  // This is the UNIQUE ID for each separate chat session.
  chatId: {
    type: String,
    required: true,
    unique: true, // The chat ID must be unique
    index: true,
  },
  // The title for the chat, generated by the AI
  title: {
    type: String,
    default: "New Chat",
  },
  // The history of messages for THIS specific chat
  history: [
    {
      role: String,
      parts: [{ text: String }],
    },
  ],
  createdAt: {
    type: Date,
    default: Date.now,
  },
});

// IMPORTANT: This removes the old, incorrect unique index on the 'userId' field
// Mongoose will automatically detect the change and update the index on the next run.
// If the error persists, you may need to drop the index manually in your MongoDB database.
chatHistorySchema.index({ user: 1 }); // We still want to be able to search by user efficiently

module.exports = mongoose.model("ChatHistory", chatHistorySchema);
